import{_ as a,c as s,o as e,ag as d}from"./chunks/framework.C7v41-tM.js";const m=JSON.parse('{"title":"pnpm 使用","description":"","frontmatter":{},"headers":[],"relativePath":"前端/pnpm.md","filePath":"前端/pnpm.md","lastUpdated":1761620680000}'),n={name:"前端/pnpm.md"};function i(p,t,r,l,o,h){return e(),s("div",null,[...t[0]||(t[0]=[d(`<h1 id="pnpm-使用" tabindex="-1">pnpm 使用 <a class="header-anchor" href="#pnpm-使用" aria-label="Permalink to &quot;pnpm 使用&quot;">​</a></h1><blockquote><p>pnpm 是一种 JavaScript 包管理器（与 npm、yarn 类似），用于管理 Node.js 项目的依赖。 名字来自于 “Performant npm”，它最大的特点是 速度快、磁盘占用小。</p></blockquote><h2 id="使用优势" tabindex="-1">使用优势 <a class="header-anchor" href="#使用优势" aria-label="Permalink to &quot;使用优势&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>特性</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>🪶节省磁盘空间</td><td>使用“内容寻址存储”（Content Addressable Storage），不同项目共用相同的依赖包副本，而不是重复安装。</td></tr><tr><td>⚙️ 安装速度快</td><td>因为依赖被缓存，后续项目安装相同包时只需创建硬链接。</td></tr><tr><td>🧱 严格的依赖隔离</td><td>默认启用严格模式，不允许隐式依赖（防止“幽灵依赖”问题）。</td></tr><tr><td>🔒 安全</td><td>每个包的依赖都被明确隔离，避免冲突和污染。</td></tr><tr><td>🧑‍🤝‍🧑 Monorepo 支持强</td><td>内置 workspace 支持，轻松管理多包仓库</td></tr></tbody></table><p>pnpm 通过符号链接 (symlink) 将依赖映射到全局的存储区（store）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看当前 pnpm store 位置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>对比优势</strong></p><table tabindex="0"><thead><tr><th>比较项</th><th>npm</th><th>yarn</th><th>pnpm</th></tr></thead><tbody><tr><td>安装速度</td><td>慢</td><td>较快</td><td>🚀 非常快</td></tr><tr><td>磁盘占用</td><td>高</td><td>中</td><td>🚀 最低</td></tr><tr><td>依赖隔离</td><td>宽松</td><td>一般</td><td>🚀 严格</td></tr><tr><td>Monorepo 支持</td><td>无</td><td>有</td><td>🚀 内置支持</td></tr><tr><td>安全性</td><td>一般</td><td>一般</td><td>🚀 高</td></tr><tr><td>架构原理</td><td>扁平安装</td><td>缓存优化</td><td>内容寻址+硬链接</td></tr></tbody></table><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><table tabindex="0"><thead><tr><th>操作</th><th>npm 命令</th><th>pnpm 命令</th></tr></thead><tbody><tr><td>初始化项目</td><td><code>npm init</code></td><td><code>pnpm init</code></td></tr><tr><td>安装依赖</td><td><code>npm install</code></td><td><code>pnpm install</code></td></tr><tr><td>安装单个包</td><td><code>npm install react</code></td><td><code>pnpm add react</code></td></tr><tr><td>安装开发依赖</td><td><code>npm install -D typescript</code></td><td><code>pnpm add -D typescript</code></td></tr><tr><td>卸载包</td><td><code>npm uninstall react</code></td><td><code>pnpm remove react</code></td></tr><tr><td>更新依赖</td><td><code>npm update</code></td><td><code>pnpm update</code></td></tr><tr><td>运行脚本</td><td><code>npm run build</code></td><td><code>pnpm build</code></td></tr><tr><td>查看过期包</td><td><code>npm outdated</code></td><td><code>pnpm outdated</code></td></tr><tr><td>清理缓存</td><td><code>npm cache clean --force</code></td><td><code>pnpm store prune</code></td></tr></tbody></table><h2 id="工作区-monorepo" tabindex="-1">工作区（Monorepo） <a class="header-anchor" href="#工作区-monorepo" aria-label="Permalink to &quot;工作区（Monorepo）&quot;">​</a></h2><p>pnpm 支持多包仓库管理（workspaces）：</p><p><em><strong>示例：</strong></em></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm-workspace.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">packages/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├─</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  └─</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><em><strong>pnpm-workspace.yaml：</strong></em></p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;packages/*&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><em><strong>然后在根目录运行：</strong></em></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>pnpm 会自动识别子包之间的依赖关系，实现本地互联。 <a href="https://github.com/wwELi/pnpm-demo.git" target="_blank" rel="noreferrer">Demo 地址</a></p>`,21)])])}const b=a(n,[["render",i]]);export{m as __pageData,b as default};
