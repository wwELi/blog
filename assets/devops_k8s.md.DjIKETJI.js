import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.C7v41-tM.js";const c=JSON.parse('{"title":"☸️ Kubernetes 入门","description":"","frontmatter":{},"headers":[],"relativePath":"devops/k8s.md","filePath":"devops/k8s.md","lastUpdated":1761307712000}'),t={name:"devops/k8s.md"};function l(p,s,h,r,d,k){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="☸️-kubernetes-入门" tabindex="-1">☸️ Kubernetes 入门 <a class="header-anchor" href="#☸️-kubernetes-入门" aria-label="Permalink to &quot;☸️ Kubernetes 入门&quot;">​</a></h1><h2 id="环境准备-🐳" tabindex="-1">环境准备 🐳 <a class="header-anchor" href="#环境准备-🐳" aria-label="Permalink to &quot;环境准备 🐳&quot;">​</a></h2><ul><li>Docker Desktop</li></ul><h2 id="设置" tabindex="-1">设置 <a class="header-anchor" href="#设置" aria-label="Permalink to &quot;设置&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">在docker Desktop进行如下设置 🎉</p><p>setting -&gt; Kubernetes -&gt; Enable Kubernetes</p></div><p>等待加载完成使用 命令 验证</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --short</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="创建demo" tabindex="-1">创建demo <a class="header-anchor" href="#创建demo" aria-label="Permalink to &quot;创建demo&quot;">​</a></h2><p>本地创建 一个nginx 的demo 新建deployment yaml</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html-deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 标签名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 副本数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # container name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 镜像文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          imagePullPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">IfNotPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>这个只是定义了部署的 pod的定义 还需要定义向外暴露的的服务信息（如果使用本地的镜像需要设置k8s环境可以访问docker）</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">static-html</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 👈 匹配上面 Deployment 的标签</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NodePort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      nodePort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30080</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # NodePort 范围是 30000-32767</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>执行运行pod命令 <code>kubectl apply -f k8s-deployment.yaml</code>通过 <code>kubectl get pods</code> 查看pods 执行运行service <code>kubectl apply -f k8s-service.yaml</code> 同样可以通过 <code>kubectl get svc</code>查看 运行成功之后可以访问<code>http://localhost:30080/</code> 删除命令</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k8s-deployment.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k8s-service.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="访问dashboard" tabindex="-1">访问dashboard <a class="header-anchor" href="#访问dashboard" aria-label="Permalink to &quot;访问dashboard&quot;">​</a></h2><p>使用 <code>kubectl proxy</code> 后访问</p><blockquote><p><a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noreferrer">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</a></p></blockquote><p>一般使用token 登录 Dashboard 默认需要 ServiceAccount 和 ClusterRoleBinding 才能访问集群资源。</p><ul><li>创建 ServiceAccount</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apiVersion: v1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kind: ServiceAccount</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name: admin-user</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  namespace: kubernetes-dashboard</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>创建 ClusterRoleBinding</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apiVersion: rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kind: ClusterRoleBinding</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name: admin-user</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">roleRef:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  apiGroup: rbac.authorization.k8s.io</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  kind: ClusterRole</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name: cluster-admin</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">subjects:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- kind: ServiceAccount</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name: admin-user</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  namespace: kubernetes-dashboard</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>获取登录的token</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kubernetes-dashboard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin-user</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用生成的token 就可以访问了</p><h2 id="k8s-node-节点" tabindex="-1">K8s Node（节点） <a class="header-anchor" href="#k8s-node-节点" aria-label="Permalink to &quot;K8s Node（节点）&quot;">​</a></h2><ol><li>Node 是 Kubernetes 集群中用于运行 <strong>Pod</strong> 的工作节点（Worker Node）。</li><li>每个 Node 都包含运行容器所需的核心组件：<code>kubelet</code>、<code>kube-proxy</code> 和容器运行时（container runtime）。</li></ol><p><strong>一个 K8s 集群通常包含：</strong></p><ul><li>若干个 <strong>Node（工作节点）</strong></li><li>每个 Node 可以运行多个 <strong>Pod</strong></li><li>控制平面（Control Plane）负责调度哪些 Pod 应该运行在哪个 Node 上。</li></ul><table tabindex="0"><thead><tr><th>组件</th><th>作用说明</th></tr></thead><tbody><tr><td><strong>kubelet</strong></td><td>管理当前节点上的 Pod 生命周期，监听来自控制平面的指令</td></tr><tr><td><strong>kube-proxy</strong></td><td>管理网络规则，处理 Pod 间和 Service 的通信与负载均衡</td></tr><tr><td><strong>容器运行时</strong>（如 containerd）</td><td>实际拉取镜像并运行容器</td></tr></tbody></table><h3 id="pod" tabindex="-1">POD <a class="header-anchor" href="#pod" aria-label="Permalink to &quot;POD&quot;">​</a></h3><p>在 Kubernetes 中，<strong>Pod 是容器的抽象层</strong>。 它代表集群中运行的一个应用实例，通常包含：</p><ul><li>一个或多个容器（Container）</li><li>存储卷（Volume）</li><li>网络命名空间（IP、端口）</li><li>运行配置（环境变量、探针、资源限制等）</li></ul><h3 id="service" tabindex="-1">Service <a class="header-anchor" href="#service" aria-label="Permalink to &quot;Service&quot;">​</a></h3><p>为什么需要 Service？</p><ul><li>Pod 是短暂的、动态的，IP 地址会随 Pod 重启而变化</li><li>Service 提供一个 <strong>固定的访问入口</strong>，并自动负载均衡到对应 Pod</li><li>Service 可用于： <ul><li>集群内部通信（ClusterIP）</li><li>对外暴露（NodePort、LoadBalancer）</li><li>HTTP 路由（配合 Ingress）</li></ul></li></ul><p>示例：为 nginx Pod 创建 ClusterIP Service</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Service 对外端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Pod 容器端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClusterIP</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="ingress" tabindex="-1">Ingress <a class="header-anchor" href="#ingress" aria-label="Permalink to &quot;Ingress&quot;">​</a></h3><p><strong>route traffic into cluster = Ingress</strong></p><ul><li>是 Kubernetes 提供的七层（HTTP/HTTPS）路由规则对象，用于将外部请求（通常来自浏览器）转发到集群内部的 Service 和 Pod</li><li>为什么需要 Ingress？</li></ul><p>在 Kubernetes 中，Service（如 ClusterIP）<strong>默认不能被外部访问</strong>，即使用 NodePort/LoadBalancer 暴露也：</p><ul><li>不方便管理多个服务</li><li>不支持基于 URL 或域名做转发</li><li>缺少 HTTPS 支持</li></ul><p>👉 Ingress 提供统一的入口网关，灵活路由、支持 TLS，适合生产环境使用</p><p>示例：将流量按路径转发给不同服务</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># http://myapp.com/web → 转发到 web-service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># http://myapp.com/api → 转发到 api-service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">example-ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">myapp.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/web</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        pathType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Prefix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">web-service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 对应service 的名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/api</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        pathType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Prefix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">api-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="dns-name" tabindex="-1">DNS Name <a class="header-anchor" href="#dns-name" aria-label="Permalink to &quot;DNS Name&quot;">​</a></h3><ul><li>每个 <strong>Service 和 Pod</strong> 都会被自动注册到一个<strong>内部 DNS 系统中</strong>，从而可以通过“名字”来访问服务，而不是直接使用 IP 地址</li><li>Kubernetes 为 Service 自动生成以下 DNS 名称：</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`service-name\`.\`namespace\`.svc.cluster.local</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="yaml-配置文件" tabindex="-1">Yaml 配置文件 <a class="header-anchor" href="#yaml-配置文件" aria-label="Permalink to &quot;Yaml 配置文件&quot;">​</a></h2><h3 id="_1️⃣-通用-yaml-字段说明" tabindex="-1">1️⃣ 通用 YAML 字段说明 <a class="header-anchor" href="#_1️⃣-通用-yaml-字段说明" aria-label="Permalink to &quot;1️⃣ 通用 YAML 字段说明&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>apiVersion</td><td>string</td><td>API 版本</td><td><code>v1</code>, <code>apps/v1</code></td></tr><tr><td>kind</td><td>string</td><td>资源类型</td><td><code>Pod</code>, <code>Deployment</code>, <code>Service</code></td></tr><tr><td>metadata</td><td>object</td><td>元数据，包括 name、namespace、labels、annotations</td><td><code>metadata:\\n name: nginx-pod\\n labels:\\n app: web</code></td></tr><tr><td>spec</td><td>object</td><td>资源规范，定义行为和配置</td><td><code>spec:\\n replicas: 3\\n selector:\\n matchLabels:\\n app: web</code></td></tr><tr><td>status</td><td>object</td><td>状态信息（系统生成，只读）</td><td><code>status:\\n phase: Running</code></td></tr></tbody></table><h3 id="_2️⃣-pod-yaml-字段" tabindex="-1">2️⃣ Pod YAML 字段 <a class="header-anchor" href="#_2️⃣-pod-yaml-字段" aria-label="Permalink to &quot;2️⃣ Pod YAML 字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>containers</td><td>list</td><td>容器列表</td><td><code>containers:\\n - name: nginx\\n image: nginx:latest</code></td></tr><tr><td>initContainers</td><td>list</td><td>初始化容器，Pod 启动前执行</td><td><code>initContainers:\\n - name: init-mydb\\n image: busybox</code></td></tr><tr><td>volumes</td><td>list</td><td>挂载卷</td><td><code>volumes:\\n - name: data\\n emptyDir: {}</code></td></tr><tr><td>restartPolicy</td><td>string</td><td>重启策略</td><td><code>restartPolicy: Always</code></td></tr><tr><td>nodeSelector</td><td>object</td><td>节点选择</td><td><code>nodeSelector:\\n role: frontend</code></td></tr><tr><td>tolerations</td><td>list</td><td>污点容忍</td><td><code>tolerations:\\n - key: &quot;key&quot;\\n operator: &quot;Equal&quot;\\n value: &quot;value&quot;\\n effect: &quot;NoSchedule&quot;</code></td></tr><tr><td>affinity</td><td>object</td><td>Pod 调度亲和/反亲和</td><td><code>affinity:\\n podAntiAffinity: {...}</code></td></tr><tr><td>livenessProbe</td><td>object</td><td>存活探针</td><td><code>livenessProbe:\\n httpGet:\\n path: /\\n port: 80</code></td></tr><tr><td>readinessProbe</td><td>object</td><td>就绪探针</td><td><code>readinessProbe:\\n tcpSocket:\\n port: 80</code></td></tr><tr><td>resources</td><td>object</td><td>CPU/内存请求与限制</td><td><code>resources:\\n requests:\\n cpu: 250m\\n memory: 128Mi\\n limits:\\n cpu: 500m\\n memory: 256Mi</code></td></tr></tbody></table><h3 id="_3️⃣-deployment-yaml-字段" tabindex="-1">3️⃣ Deployment YAML 字段 <a class="header-anchor" href="#_3️⃣-deployment-yaml-字段" aria-label="Permalink to &quot;3️⃣ Deployment YAML 字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>replicas</td><td>int</td><td>Pod 副本数</td><td><code>replicas: 3</code></td></tr><tr><td>selector</td><td>object</td><td>匹配 Pod 标签</td><td><code>selector:\\n matchLabels:\\n app: web</code></td></tr><tr><td>template</td><td>object</td><td>Pod 模板</td><td><code>template:\\n metadata:\\n labels:\\n app: web\\n spec:\\n containers: [...]</code></td></tr><tr><td>strategy</td><td>object</td><td>滚动更新策略</td><td><code>strategy:\\n type: RollingUpdate\\n rollingUpdate:\\n maxUnavailable: 1</code></td></tr></tbody></table><h3 id="_4️⃣-service-yaml-字段" tabindex="-1">4️⃣ Service YAML 字段 <a class="header-anchor" href="#_4️⃣-service-yaml-字段" aria-label="Permalink to &quot;4️⃣ Service YAML 字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>selector</td><td>object</td><td>匹配 Pod 标签</td><td><code>selector:\\n app: web</code></td></tr><tr><td>type</td><td>string</td><td>Service 类型</td><td><code>ClusterIP</code>, <code>NodePort</code>, <code>LoadBalancer</code>, <code>ExternalName</code></td></tr><tr><td>ports</td><td>list</td><td>端口映射</td><td><code>ports:\\n - port: 80\\n targetPort: 80\\n nodePort: 30080</code></td></tr><tr><td>clusterIP</td><td>string</td><td>集群内部 IP（可选）</td><td><code>clusterIP: None</code>（Headless Service）</td></tr><tr><td>externalName</td><td>string</td><td>外部域名</td><td><code>externalName: example.com</code></td></tr><tr><td>sessionAffinity</td><td>string</td><td>会话保持</td><td><code>sessionAffinity: ClientIP</code></td></tr></tbody></table><h3 id="_5️⃣-ingress-yaml-字段" tabindex="-1">5️⃣ Ingress YAML 字段 <a class="header-anchor" href="#_5️⃣-ingress-yaml-字段" aria-label="Permalink to &quot;5️⃣ Ingress YAML 字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>rules</td><td>list</td><td>路由规则</td><td><code>rules:\\n - host: myapp.local\\n http:\\n paths:\\n - path: /\\n pathType: Prefix\\n backend:\\n service:\\n name: nginx-service\\n port:\\n number: 80</code></td></tr><tr><td>tls</td><td>list</td><td>TLS 配置</td><td><code>tls:\\n - hosts:\\n - myapp.local\\n secretName: my-tls-secret</code></td></tr><tr><td>annotations</td><td>object</td><td>控制器特定配置</td><td><code>annotations:\\n kubernetes.io/ingress.class: nginx</code></td></tr></tbody></table><h3 id="_6️⃣-高级-yaml-特性" tabindex="-1">6️⃣ 高级 YAML 特性 <a class="header-anchor" href="#_6️⃣-高级-yaml-特性" aria-label="Permalink to &quot;6️⃣ 高级 YAML 特性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>锚点 &amp; 别名</td><td>避免重复配置</td><td><code>defaults: &amp;defaults\\n image: nginx:latest\\npod1:\\n &lt;&lt;: *defaults</code></td></tr><tr><td>多文档文件</td><td>用 <code>---</code> 分隔多个文档</td><td><code>---\\napiVersion: v1\\nkind: Pod\\n...\\n---\\napiVersion: v1\\nkind: Pod\\n...</code></td></tr><tr><td>多行字符串</td><td>\`</td><td><code> 保留换行，</code>&gt;\` 折叠换行</td></tr></tbody></table><h3 id="_7️⃣-常见-yaml-错误" tabindex="-1">7️⃣ 常见 YAML 错误 <a class="header-anchor" href="#_7️⃣-常见-yaml-错误" aria-label="Permalink to &quot;7️⃣ 常见 YAML 错误&quot;">​</a></h3><table tabindex="0"><thead><tr><th>错误</th><th>原因</th><th>解决方法</th></tr></thead><tbody><tr><td><code>expected &lt;block end&gt;</code></td><td>缩进错误或空格不一致</td><td>使用空格缩进，避免 Tab</td></tr><tr><td><code>mapping values are not allowed</code></td><td>键值缺少冒号</td><td>检查冒号和空格</td></tr><tr><td><code>unknown field</code></td><td>字段拼写错误</td><td>对照官方 API 文档</td></tr><tr><td>CrashLoopBackOff</td><td>容器或配置错误</td><td>检查容器镜像、端口、探针设置</td></tr></tbody></table><h3 id="_8️⃣-小结" tabindex="-1">8️⃣ 小结 <a class="header-anchor" href="#_8️⃣-小结" aria-label="Permalink to &quot;8️⃣ 小结&quot;">​</a></h3><ul><li>Kubernetes YAML 核心字段：<code>apiVersion</code>、<code>kind</code>、<code>metadata</code>、<code>spec</code></li><li>Pod 是最小调度单元，Deployment 管理 Pod 副本</li><li>Service 提供稳定访问，Ingress 管理外部路由</li><li>掌握缩进、列表、字典、注释、多文档等 YAML 特性</li><li>高级特性：锚点、别名、多行字符串，避免重复和冗长</li></ul><h3 id="📚-参考资料" tabindex="-1">📚 参考资料 <a class="header-anchor" href="#📚-参考资料" aria-label="Permalink to &quot;📚 参考资料&quot;">​</a></h3><ul><li>Kubernetes 官方文档 YAML：<a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/" target="_blank" rel="noreferrer">https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/</a></li><li>YAML 官方规范：<a href="https://yaml.org/spec/" target="_blank" rel="noreferrer">https://yaml.org/spec/</a></li><li>Kubernetes Cheat Sheet：<a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/" target="_blank" rel="noreferrer">https://kubernetes.io/docs/reference/kubectl/cheatsheet/</a></li></ul><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h2><p><a href="https://github.com/wwELi/nuxt-app/blob/main/deployment/deployment.yml" target="_blank" rel="noreferrer">https://github.com/wwELi/nuxt-app/blob/main/deployment/deployment.yml</a></p>`,70)])])}const b=a(t,[["render",l]]);export{c as __pageData,b as default};
