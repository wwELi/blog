import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.C7v41-tM.js";const E=JSON.parse('{"title":"nginx 配置文件详解","description":"","frontmatter":{},"headers":[],"relativePath":"tools/nginx_conf.md","filePath":"tools/nginx_conf.md","lastUpdated":1761620680000}'),p={name:"tools/nginx_conf.md"};function t(e,s,h,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="nginx-配置文件详解" tabindex="-1">nginx 配置文件详解 <a class="header-anchor" href="#nginx-配置文件详解" aria-label="Permalink to &quot;nginx 配置文件详解&quot;">​</a></h1><h2 id="🧩-nginx-是什么" tabindex="-1">🧩 nginx 是什么？ <a class="header-anchor" href="#🧩-nginx-是什么" aria-label="Permalink to &quot;🧩 nginx 是什么？&quot;">​</a></h2><p><strong>Nginx 是一个高性能的 Web 服务器和反向代理服务器。常用于：</strong></p><ul><li>静态资源服务（如前端文件）；</li><li>反向代理（转发请求到后端服务，如 Node.js / Java / Python）；</li><li>负载均衡；</li><li>HTTPS / HTTP2；</li><li>缓存、压缩、中间层安全控制。</li></ul><h2 id="🧱-配置结构层次说明" tabindex="-1">🧱 配置结构层次说明 <a class="header-anchor" href="#🧱-配置结构层次说明" aria-label="Permalink to &quot;🧱 配置结构层次说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>层级</th><th>作用</th></tr></thead><tbody><tr><td><strong>全局块main</strong></td><td>设置 Nginx 运行的全局参数，如用户、进程数、日志位置等</td></tr><tr><td><strong>events 块</strong></td><td>影响 Nginx 与客户端的连接处理，如最大连接数、I/O 模型</td></tr><tr><td><strong>http 块</strong></td><td>包含 Web 服务相关配置，如 MIME 类型、日志、gzip、server 定义</td></tr><tr><td><strong>server 块</strong></td><td>一个虚拟主机的配置，可监听不同域名/端口</td></tr><tr><td><strong>location 块</strong></td><td>定义请求路径的匹配规则及处理方式（反向代理、静态资源、重定向等）</td></tr><tr><td><strong>configuration 块</strong></td><td>能够将其他文件包含在nginx配置文件中</td></tr></tbody></table><h2 id="⚙️-配置" tabindex="-1">⚙️ 配置 <a class="header-anchor" href="#⚙️-配置" aria-label="Permalink to &quot;⚙️ 配置&quot;">​</a></h2><p>HTTP 核心模块是Nginx中最大的一个模块，绝大多数与 Web 服务、反向代理、负载均衡、缓存、日志、压缩、安全相关的配置都写在这里。 主要包含http/server/location三个层次的每个层次都可以插入指令</p><ul><li>http 区段位于配置文件的根部，在这个区段中允许定义HTTP模块的指令和HTTP模块的相关区段。</li><li>server区段用于声明一个站点，该区段只能用在http区段中。</li><li>loation 区段应用于网站特定的URI位置，该区段能够用于server区段中，也能嵌套在其他location中。</li></ul><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">########### 每个指令必须有分号结束。#################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#worker_processes 2;  #允许生成的进程数，默认为1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log/error.log </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    accept_mutex </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置网路连接序列化，防止惊群现象发生，默认为on</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    multi_accept </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置一个进程是否同时接受多个网络连接，默认为off</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    worker_connections </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#最大连接数，默认为512</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mime.types;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#文件扩展名与文件类型映射表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application/octet-stream; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#默认文件类型，默认为text/plain</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #access_log off; #取消服务日志    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    log_format </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myFormat </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">–$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> [$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time_local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">] $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body_bytes_sent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_referer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_user_agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#自定义格式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log/access.log myFormat;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#combined为日志格式的默认值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    sendfile_max_chunk </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#连接超时时间，默认为75s，可以在http，server，location块。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">​</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    tcp_nopush </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提高网络包传输效率</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    tcp_nodelay </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 减少延迟</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    types_hash_max_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启用 gzip 压缩</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text/plain application/json text/css application/javascript;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 负载均衡定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mysvr </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 127.0.0.1:7878;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 192.168.10.121:3333 backup;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#热备</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    error_page </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">404</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://www.baidu.com; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#错误页</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        keepalive_requests </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#单连接请求上限次数。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#监听端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> www.website.com website.com;;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#监听地址, nginx收到http请求时，根据请求header中Host值与所有server区段比较，第一个与主机名匹配的server块将被选中，否则如果没有server区段与客户端请求的主机名匹配，nginx会选择第一个server区段。       </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ~*^.+$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           #root path;  #根目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           #index vv.txt;  #设置默认页</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           #alias /spool/w3/location; 指定uri路径的别名，它不会改变root的值。uri中location后面的部分会追加到这个目录后面，而location自身指定的uri路径是&quot;丢弃的&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           #try_files:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http://mysvr;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#请求转向mysvr 定义的服务器列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           deny </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127.0.0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#拒绝的ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           allow </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172.18.5.54</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#允许的ip           </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div>`,10)])])}const c=i(p,[["render",t]]);export{E as __pageData,c as default};
